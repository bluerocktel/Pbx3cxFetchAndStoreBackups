#!/bin/bash
#
# (c) 2024 - BlueRockTEL. <hello@bluerocktel.com>
#
# This file is part of Pbx3cxFetchAndStoreBackups.
#
# Pbx3cxFetchAndStoreBackups is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Pbx3cxFetchAndStoreBackups is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Pbx3cxFetchAndStoreBackups. If not, see <http://www.gnu.org/licenses/>

source .env

input="${worker_path}/$1"
exceptions="${worker_path}/exceptions"

journal="${worker_path}/logs/store_journal.txt"
current_date=$(date +"%Y%m%d")
current_journal="${worker_path}/logs/store_journal_$current_date.txt"

day=$(date +%a)

while IFS= read -r host
do
    exception=$(grep -c "$host" "$exceptions")

    if [ "$exception" -gt 0 ]; then
        echo "Host $host is in the exception file, skipping" >> "$journal"
        echo "Host $host is in the exception file, skipping" >> "$current_journal"
        continue
    fi

    echo "Processing host: $host"
    ssh -p ${destination_port} -n ${destination_user}@${destination_host} "mkdir -p ${host}"
    ssh -p ${destination_port} -n ${destination_user}@${destination_host} "mkdir -p ${host}/${day}"

    if rsync -avzte "ssh -p${destination_port} -o PasswordAuthentication=no" "${worker_backups_path}/${host}/${day}/" "${destination_user}@${destination_host}:${host}/${day}/"; then
        echo "Rsync to destination for host $host: ok" >> "$journal"
        echo "Rsync to destination for host $host: ok" >> "$current_journal"
    else
        echo "Rsync to destination for host $host: ok" >> "$journal"
        echo "Rsync to destination for host $host: ok" >> "$current_journal"
    fi

done < "$input"
